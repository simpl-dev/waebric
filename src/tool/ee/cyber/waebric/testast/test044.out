0:143:Program {
  definitions=16:143:Definitions {
    definition=List {
      16:48:FunctionDef {
        arguments=(null)
        endTerm=46:48:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:44:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=27:44:MarkupStatement {
              markup=27:43:Markup {
                arguments=28:43:Arguments {
                  first=29:42:Expression {
                    catExpression=29:42:CatExpression {
                      left=29:42:FieldExpression {
                        idCon=(null)
                        primitiveExpression=29:42:Text {
                          text=""Hello world!""
                        }
                      }
                      right=(null)
                    }
                    listExpression=(null)
                    recordExpression=(null)
                  }
                  rest=List {
                  }
                }
                designator=27:27:Designator {
                  attribute=List {
                  }
                  idCon=27:27:IdCon {
                    text="f"
                  }
                }
              }
              markupChain=44:44:MarkupChain {
                embedding=(null)
                expression=(null)
                semicolon=44:44:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
        }
      }
      51:110:FunctionDef {
        arguments=57:57:Formals {
          left=57:57:IdCon {
            text="x"
          }
          rest=List {
          }
        }
        endTerm=108:110:EndTerm {
          text="end"
        }
        idCon=55:55:IdCon {
          text="f"
        }
        statements=List {
          62:106:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=62:106:LetStatement {
              assignment=List {
                71:85:Assignment {
                  funcBinding=(null)
                  varBinding=71:85:VarBinding {
                    expression=75:84:Expression {
                      catExpression=75:84:CatExpression {
                        left=75:84:FieldExpression {
                          idCon=(null)
                          primitiveExpression=75:84:Text {
                            text=""Goodbye!""
                          }
                        }
                        right=(null)
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    idCon=71:71:IdCon {
                      text="x"
                    }
                    semicolon=85:85:Semicolon {
                      text=";"
                    }
                  }
                }
              }
              endTerm=104:106:EndTerm {
                text="end"
              }
              statement=List {
                96:100:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=96:100:MarkupStatement {
                    markup=96:99:Markup {
                      arguments=97:99:Arguments {
                        first=98:98:Expression {
                          catExpression=98:98:CatExpression {
                            left=98:98:FieldExpression {
                              idCon=(null)
                              primitiveExpression=98:98:IdCon {
                                text="x"
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        rest=List {
                        }
                      }
                      designator=96:96:Designator {
                        attribute=List {
                        }
                        idCon=96:96:IdCon {
                          text="g"
                        }
                      }
                    }
                    markupChain=100:100:MarkupChain {
                      embedding=(null)
                      expression=(null)
                      semicolon=100:100:Semicolon {
                        text=";"
                      }
                      statement=(null)
                    }
                  }
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
      113:143:FunctionDef {
        arguments=119:119:Formals {
          left=119:119:IdCon {
            text="x"
          }
          rest=List {
          }
        }
        endTerm=141:143:EndTerm {
          text="end"
        }
        idCon=117:117:IdCon {
          text="g"
        }
        statements=List {
          124:139:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=124:139:EchoStatement {
              embedding=(null)
              expression=129:138:Expression {
                catExpression=129:138:CatExpression {
                  left=129:134:FieldExpression {
                    idCon=(null)
                    primitiveExpression=129:134:Text {
                      text=""x = ""
                    }
                  }
                  right=138:138:Expression {
                    catExpression=138:138:CatExpression {
                      left=138:138:FieldExpression {
                        idCon=(null)
                        primitiveExpression=138:138:IdCon {
                          text="x"
                        }
                      }
                      right=(null)
                    }
                    listExpression=(null)
                    recordExpression=(null)
                  }
                }
                listExpression=(null)
                recordExpression=(null)
              }
              semicolon=139:139:Semicolon {
                text=";"
              }
            }
            ifStatement=(null)
            letStatement=(null)
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test044"
  }
}
RAW:
Program(IdCon(test044),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(f),List()),Arguments(Expression(CatExpression(FieldExpression(Text("Hello world!"),null),null),null,null),List())),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)), FunctionDef(IdCon(f),Formals(IdCon(x),List()),List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(x),Expression(CatExpression(FieldExpression(Text("Goodbye!"),null),null),null,null),Semicolon(;)),null)),List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(g),List()),Arguments(Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null),List())),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)), FunctionDef(IdCon(g),Formals(IdCon(x),List()),List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("x = "),null),Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null)),null,null),null,Semicolon(;)),null,null,null)),EndTerm(end)))))