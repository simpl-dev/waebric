0:122:Program {
  definitions=16:122:Definitions {
    definition=List {
      16:122:FunctionDef {
        arguments=(null)
        endTerm=120:122:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:118:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=27:118:LetStatement {
              assignment=List {
                31:43:Assignment {
                  funcBinding=(null)
                  varBinding=31:43:VarBinding {
                    expression=35:42:Expression {
                      catExpression=(null)
                      listExpression=(null)
                      recordExpression=35:42:RecordExpression {
                        first=36:41:KeyValuePair {
                          expression=39:41:Expression {
                            catExpression=39:41:CatExpression {
                              left=39:41:FieldExpression {
                                idCon=(null)
                                primitiveExpression=39:41:Text {
                                  text=""X""
                                }
                              }
                              right=(null)
                            }
                            listExpression=(null)
                            recordExpression=(null)
                          }
                          idCon=36:36:IdCon {
                            text="x"
                          }
                        }
                        rest=List {
                        }
                      }
                    }
                    idCon=31:31:IdCon {
                      text="b"
                    }
                    semicolon=43:43:Semicolon {
                      text=";"
                    }
                  }
                }
              }
              endTerm=116:118:EndTerm {
                text="end"
              }
              statement=List {
                55:112:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=55:112:IfStatement {
                    elseStat=103:112:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=103:112:EchoStatement {
                        embedding=(null)
                        expression=108:111:Expression {
                          catExpression=108:111:CatExpression {
                            left=108:111:FieldExpression {
                              idCon=(null)
                              primitiveExpression=108:111:Text {
                                text=""No""
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        semicolon=112:112:Semicolon {
                          text=";"
                        }
                      }
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=(null)
                      yieldStatement=(null)
                    }
                    ifStat=76:86:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=76:86:EchoStatement {
                        embedding=(null)
                        expression=81:85:Expression {
                          catExpression=81:85:CatExpression {
                            left=81:85:FieldExpression {
                              idCon=(null)
                              primitiveExpression=81:85:Text {
                                text=""Yes""
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        semicolon=86:86:Semicolon {
                          text=";"
                        }
                      }
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=(null)
                      yieldStatement=(null)
                    }
                    predicate=59:67:Predicate {
                      left=59:67:IsAPredicate {
                        expression=59:59:Expression {
                          catExpression=59:59:CatExpression {
                            left=59:59:FieldExpression {
                              idCon=(null)
                              primitiveExpression=59:59:IdCon {
                                text="b"
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        predType=61:66:PredType {
                          text="record"
                        }
                      }
                      op=List {
                      }
                      rest=List {
                      }
                    }
                  }
                  letStatement=(null)
                  markupStatement=(null)
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test081"
  }
}
RAW:
Program(IdCon(test081),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(b),Expression(null,null,RecordExpression(KeyValuePair(IdCon(x),Expression(CatExpression(FieldExpression(Text("X"),null),null),null,null)),List())),Semicolon(;)),null)),List(Statement(IfStatement(Predicate(IsAPredicate(Expression(CatExpression(FieldExpression(IdCon(b),null),null),null,null),PredType(record)),List(),List()),Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("Yes"),null),null),null,null),null,Semicolon(;)),null,null,null),Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("No"),null),null),null,null),null,Semicolon(;)),null,null,null)),null,null,null,null,null,null,null,null)),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)))))