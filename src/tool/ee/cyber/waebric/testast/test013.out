0:88:Program {
  definitions=16:88:Definitions {
    definition=List {
      16:88:FunctionDef {
        arguments=(null)
        endTerm=86:88:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:84:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=27:84:LetStatement {
              assignment=List {
                36:64:Assignment {
                  funcBinding=(null)
                  varBinding=36:64:VarBinding {
                    expression=40:63:Expression {
                      catExpression=40:63:CatExpression {
                        left=40:46:FieldExpression {
                          idCon=(null)
                          primitiveExpression=40:46:Text {
                            text=""Hello""
                          }
                        }
                        right=50:63:Expression {
                          catExpression=50:63:CatExpression {
                            left=50:52:FieldExpression {
                              idCon=(null)
                              primitiveExpression=50:52:Text {
                                text="" ""
                              }
                            }
                            right=56:63:Expression {
                              catExpression=56:63:CatExpression {
                                left=56:63:FieldExpression {
                                  idCon=(null)
                                  primitiveExpression=56:63:Text {
                                    text=""world!""
                                  }
                                }
                                right=(null)
                              }
                              listExpression=(null)
                              recordExpression=(null)
                            }
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    idCon=36:36:IdCon {
                      text="x"
                    }
                    semicolon=64:64:Semicolon {
                      text=";"
                    }
                  }
                }
              }
              endTerm=82:84:EndTerm {
                text="end"
              }
              statement=List {
                72:78:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=72:78:EchoStatement {
                    embedding=(null)
                    expression=77:77:Expression {
                      catExpression=77:77:CatExpression {
                        left=77:77:FieldExpression {
                          idCon=(null)
                          primitiveExpression=77:77:IdCon {
                            text="x"
                          }
                        }
                        right=(null)
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    semicolon=78:78:Semicolon {
                      text=";"
                    }
                  }
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=(null)
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test013"
  }
}
RAW:
Program(IdCon(test013),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(x),Expression(CatExpression(FieldExpression(Text("Hello"),null),Expression(CatExpression(FieldExpression(Text(" "),null),Expression(CatExpression(FieldExpression(Text("world!"),null),null),null,null)),null,null)),null,null),Semicolon(;)),null)),List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null),null,Semicolon(;)),null,null,null)),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)))))