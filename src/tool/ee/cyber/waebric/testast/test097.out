0:76:Program {
  definitions=16:76:Definitions {
    definition=List {
      16:76:FunctionDef {
        arguments=(null)
        endTerm=74:76:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:72:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=27:72:LetStatement {
              assignment=List {
                31:40:Assignment {
                  funcBinding=(null)
                  varBinding=31:40:VarBinding {
                    expression=35:39:Expression {
                      catExpression=35:39:CatExpression {
                        left=35:39:FieldExpression {
                          idCon=(null)
                          primitiveExpression=35:39:Text {
                            text=""Hi ""
                          }
                        }
                        right=(null)
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    idCon=31:31:IdCon {
                      text="x"
                    }
                    semicolon=40:40:Semicolon {
                      text=";"
                    }
                  }
                }
              }
              endTerm=70:72:EndTerm {
                text="end"
              }
              statement=List {
                51:66:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=51:66:MarkupStatement {
                    markup=51:51:Markup {
                      arguments=(null)
                      designator=51:51:Designator {
                        attribute=List {
                        }
                        idCon=51:51:IdCon {
                          text="p"
                        }
                      }
                    }
                    markupChain=53:66:MarkupChain {
                      embedding=(null)
                      expression=53:65:Expression {
                        catExpression=53:65:CatExpression {
                          left=53:53:FieldExpression {
                            idCon=(null)
                            primitiveExpression=53:53:IdCon {
                              text="x"
                            }
                          }
                          right=57:65:Expression {
                            catExpression=57:65:CatExpression {
                              left=57:57:FieldExpression {
                                idCon=(null)
                                primitiveExpression=57:57:IdCon {
                                  text="x"
                                }
                              }
                              right=61:65:Expression {
                                catExpression=61:65:CatExpression {
                                  left=61:61:FieldExpression {
                                    idCon=(null)
                                    primitiveExpression=61:61:IdCon {
                                      text="x"
                                    }
                                  }
                                  right=65:65:Expression {
                                    catExpression=65:65:CatExpression {
                                      left=65:65:FieldExpression {
                                        idCon=(null)
                                        primitiveExpression=65:65:IdCon {
                                          text="x"
                                        }
                                      }
                                      right=(null)
                                    }
                                    listExpression=(null)
                                    recordExpression=(null)
                                  }
                                }
                                listExpression=(null)
                                recordExpression=(null)
                              }
                            }
                            listExpression=(null)
                            recordExpression=(null)
                          }
                        }
                        listExpression=(null)
                        recordExpression=(null)
                      }
                      semicolon=66:66:Semicolon {
                        text=";"
                      }
                      statement=(null)
                    }
                  }
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test097"
  }
}
RAW:
Program(IdCon(test097),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(x),Expression(CatExpression(FieldExpression(Text("Hi "),null),null),null,null),Semicolon(;)),null)),List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(Semicolon(;),Expression(CatExpression(FieldExpression(IdCon(x),null),Expression(CatExpression(FieldExpression(IdCon(x),null),Expression(CatExpression(FieldExpression(IdCon(x),null),Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null)),null,null)),null,null)),null,null),null,null)))),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)))))