0:58:Program {
  definitions=16:58:Definitions {
    definition=List {
      16:58:FunctionDef {
        arguments=(null)
        endTerm=56:58:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:30:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=27:30:MarkupStatement {
              markup=27:27:Markup {
                arguments=(null)
                designator=27:27:Designator {
                  attribute=List {
                  }
                  idCon=27:27:IdCon {
                    text="p"
                  }
                }
              }
              markupChain=29:30:MarkupChain {
                embedding=(null)
                expression=(null)
                semicolon=(null)
                statement=29:30:Statement {
                  blockStatement=29:30:BlockStatement {
                    statement=List {
                    }
                  }
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=(null)
                  yieldStatement=(null)
                }
              }
            }
            yieldStatement=(null)
          }
          34:38:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=34:38:MarkupStatement {
              markup=34:34:Markup {
                arguments=(null)
                designator=34:34:Designator {
                  attribute=List {
                  }
                  idCon=34:34:IdCon {
                    text="p"
                  }
                }
              }
              markupChain=36:38:MarkupChain {
                embedding=(null)
                expression=36:37:Expression {
                  catExpression=(null)
                  listExpression=(null)
                  recordExpression=36:37:RecordExpression {
                    first=(null)
                    rest=List {
                    }
                  }
                }
                semicolon=38:38:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
          42:46:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=42:46:MarkupStatement {
              markup=42:42:Markup {
                arguments=(null)
                designator=42:42:Designator {
                  attribute=List {
                  }
                  idCon=42:42:IdCon {
                    text="p"
                  }
                }
              }
              markupChain=44:46:MarkupChain {
                embedding=(null)
                expression=44:45:Expression {
                  catExpression=(null)
                  listExpression=44:45:ListExpression {
                    first=(null)
                    rest=List {
                    }
                  }
                  recordExpression=(null)
                }
                semicolon=46:46:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
          50:54:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=50:54:MarkupStatement {
              markup=50:50:Markup {
                arguments=(null)
                designator=50:50:Designator {
                  attribute=List {
                  }
                  idCon=50:50:IdCon {
                    text="p"
                  }
                }
              }
              markupChain=52:54:MarkupChain {
                embedding=(null)
                expression=52:53:Expression {
                  catExpression=52:53:CatExpression {
                    left=52:53:FieldExpression {
                      idCon=(null)
                      primitiveExpression=52:53:Text {
                        text=""""
                      }
                    }
                    right=(null)
                  }
                  listExpression=(null)
                  recordExpression=(null)
                }
                semicolon=54:54:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test096"
  }
}
RAW:
Program(IdCon(test096),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List()),null,null,null,null,null)))), Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(Semicolon(;),Expression(null,null,RecordExpression(null,List())),null,null))), Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(Semicolon(;),Expression(null,ListExpression(null,List()),null),null,null))), Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(Semicolon(;),Expression(CatExpression(FieldExpression(Text(""),null),null),null,null),null,null)))),EndTerm(end)))))