0:319:Program {
  definitions=16:319:Definitions {
    definition=List {
      16:319:FunctionDef {
        arguments=(null)
        endTerm=317:319:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:315:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=27:315:LetStatement {
              assignment=List {
                36:66:Assignment {
                  funcBinding=36:66:FuncBinding {
                    first=(null)
                    func=36:36:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=42:66:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=42:66:MarkupStatement {
                        markup=42:42:Markup {
                          arguments=(null)
                          designator=42:42:Designator {
                            attribute=List {
                            }
                            idCon=42:42:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=44:66:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=44:66:Statement {
                            blockStatement=44:66:BlockStatement {
                              statement=List {
                                46:57:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=46:57:EchoStatement {
                                    embedding=(null)
                                    expression=51:56:Expression {
                                      catExpression=51:56:CatExpression {
                                        left=51:56:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=51:56:Text {
                                            text=""p0: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=57:57:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                59:64:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=59:64:YieldStatement {
                                    semicolon=64:64:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                72:102:Assignment {
                  funcBinding=72:102:FuncBinding {
                    first=(null)
                    func=72:72:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=78:102:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=78:102:MarkupStatement {
                        markup=78:78:Markup {
                          arguments=(null)
                          designator=78:78:Designator {
                            attribute=List {
                            }
                            idCon=78:78:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=80:102:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=80:102:Statement {
                            blockStatement=80:102:BlockStatement {
                              statement=List {
                                82:93:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=82:93:EchoStatement {
                                    embedding=(null)
                                    expression=87:92:Expression {
                                      catExpression=87:92:CatExpression {
                                        left=87:92:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=87:92:Text {
                                            text=""p1: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=93:93:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                95:100:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=95:100:YieldStatement {
                                    semicolon=100:100:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                108:138:Assignment {
                  funcBinding=108:138:FuncBinding {
                    first=(null)
                    func=108:108:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=114:138:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=114:138:MarkupStatement {
                        markup=114:114:Markup {
                          arguments=(null)
                          designator=114:114:Designator {
                            attribute=List {
                            }
                            idCon=114:114:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=116:138:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=116:138:Statement {
                            blockStatement=116:138:BlockStatement {
                              statement=List {
                                118:129:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=118:129:EchoStatement {
                                    embedding=(null)
                                    expression=123:128:Expression {
                                      catExpression=123:128:CatExpression {
                                        left=123:128:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=123:128:Text {
                                            text=""p2: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=129:129:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                131:136:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=131:136:YieldStatement {
                                    semicolon=136:136:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                144:174:Assignment {
                  funcBinding=144:174:FuncBinding {
                    first=(null)
                    func=144:144:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=150:174:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=150:174:MarkupStatement {
                        markup=150:150:Markup {
                          arguments=(null)
                          designator=150:150:Designator {
                            attribute=List {
                            }
                            idCon=150:150:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=152:174:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=152:174:Statement {
                            blockStatement=152:174:BlockStatement {
                              statement=List {
                                154:165:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=154:165:EchoStatement {
                                    embedding=(null)
                                    expression=159:164:Expression {
                                      catExpression=159:164:CatExpression {
                                        left=159:164:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=159:164:Text {
                                            text=""p3: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=165:165:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                167:172:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=167:172:YieldStatement {
                                    semicolon=172:172:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                180:210:Assignment {
                  funcBinding=180:210:FuncBinding {
                    first=(null)
                    func=180:180:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=186:210:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=186:210:MarkupStatement {
                        markup=186:186:Markup {
                          arguments=(null)
                          designator=186:186:Designator {
                            attribute=List {
                            }
                            idCon=186:186:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=188:210:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=188:210:Statement {
                            blockStatement=188:210:BlockStatement {
                              statement=List {
                                190:201:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=190:201:EchoStatement {
                                    embedding=(null)
                                    expression=195:200:Expression {
                                      catExpression=195:200:CatExpression {
                                        left=195:200:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=195:200:Text {
                                            text=""p4: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=201:201:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                203:208:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=203:208:YieldStatement {
                                    semicolon=208:208:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                216:246:Assignment {
                  funcBinding=216:246:FuncBinding {
                    first=(null)
                    func=216:216:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=222:246:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=222:246:MarkupStatement {
                        markup=222:222:Markup {
                          arguments=(null)
                          designator=222:222:Designator {
                            attribute=List {
                            }
                            idCon=222:222:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=224:246:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=224:246:Statement {
                            blockStatement=224:246:BlockStatement {
                              statement=List {
                                226:237:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=226:237:EchoStatement {
                                    embedding=(null)
                                    expression=231:236:Expression {
                                      catExpression=231:236:CatExpression {
                                        left=231:236:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=231:236:Text {
                                            text=""p5: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=237:237:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                239:244:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=239:244:YieldStatement {
                                    semicolon=244:244:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
                252:282:Assignment {
                  funcBinding=252:282:FuncBinding {
                    first=(null)
                    func=252:252:IdCon {
                      text="p"
                    }
                    rest=List {
                    }
                    statement=258:282:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=(null)
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=258:282:MarkupStatement {
                        markup=258:258:Markup {
                          arguments=(null)
                          designator=258:258:Designator {
                            attribute=List {
                            }
                            idCon=258:258:IdCon {
                              text="p"
                            }
                          }
                        }
                        markupChain=260:282:MarkupChain {
                          embedding=(null)
                          expression=(null)
                          semicolon=(null)
                          statement=260:282:Statement {
                            blockStatement=260:282:BlockStatement {
                              statement=List {
                                262:273:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=262:273:EchoStatement {
                                    embedding=(null)
                                    expression=267:272:Expression {
                                      catExpression=267:272:CatExpression {
                                        left=267:272:FieldExpression {
                                          idCon=(null)
                                          primitiveExpression=267:272:Text {
                                            text=""p6: ""
                                          }
                                        }
                                        right=(null)
                                      }
                                      listExpression=(null)
                                      recordExpression=(null)
                                    }
                                    semicolon=273:273:Semicolon {
                                      text=";"
                                    }
                                  }
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=(null)
                                }
                                275:280:Statement {
                                  blockStatement=(null)
                                  cdataStatement=(null)
                                  commentStatement=(null)
                                  eachStatement=(null)
                                  echoStatement=(null)
                                  ifStatement=(null)
                                  letStatement=(null)
                                  markupStatement=(null)
                                  yieldStatement=275:280:YieldStatement {
                                    semicolon=280:280:Semicolon {
                                      text=";"
                                    }
                                  }
                                }
                              }
                            }
                            cdataStatement=(null)
                            commentStatement=(null)
                            eachStatement=(null)
                            echoStatement=(null)
                            ifStatement=(null)
                            letStatement=(null)
                            markupStatement=(null)
                            yieldStatement=(null)
                          }
                        }
                      }
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
              }
              endTerm=313:315:EndTerm {
                text="end"
              }
              statement=List {
                293:309:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=293:309:MarkupStatement {
                    markup=293:293:Markup {
                      arguments=(null)
                      designator=293:293:Designator {
                        attribute=List {
                        }
                        idCon=293:293:IdCon {
                          text="p"
                        }
                      }
                    }
                    markupChain=295:309:MarkupChain {
                      embedding=(null)
                      expression=295:308:Expression {
                        catExpression=295:308:CatExpression {
                          left=295:308:FieldExpression {
                            idCon=(null)
                            primitiveExpression=295:308:Text {
                              text=""Hello World!""
                            }
                          }
                          right=(null)
                        }
                        listExpression=(null)
                        recordExpression=(null)
                      }
                      semicolon=309:309:Semicolon {
                        text=";"
                      }
                      statement=(null)
                    }
                  }
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test076"
  }
}
RAW:
Program(IdCon(test076),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,LetStatement(List(Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p0: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p1: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p2: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p3: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p4: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p5: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null)))))), Assignment(null,FuncBinding(IdCon(p),null,List(),Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(null,null,null,Statement(null,null,null,BlockStatement(List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("p6: "),null),null),null,null),null,Semicolon(;)),null,null,null), Statement(null,null,null,null,null,null,null,YieldStatement(Semicolon(;)),null))),null,null,null,null,null))))))),List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(p),List()),null),MarkupChain(Semicolon(;),Expression(CatExpression(FieldExpression(Text("Hello World!"),null),null),null,null),null,null)))),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)))))