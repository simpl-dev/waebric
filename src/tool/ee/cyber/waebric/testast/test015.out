0:84:Program {
  definitions=16:84:Definitions {
    definition=List {
      16:84:FunctionDef {
        arguments=(null)
        endTerm=82:84:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:80:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=27:80:LetStatement {
              assignment=List {
                36:47:Assignment {
                  funcBinding=(null)
                  varBinding=36:47:VarBinding {
                    expression=40:46:Expression {
                      catExpression=40:46:CatExpression {
                        left=40:46:FieldExpression {
                          idCon=(null)
                          primitiveExpression=40:46:Text {
                            text=""Hello""
                          }
                        }
                        right=(null)
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    idCon=36:36:IdCon {
                      text="x"
                    }
                    semicolon=47:47:Semicolon {
                      text=";"
                    }
                  }
                }
                53:65:Assignment {
                  funcBinding=53:65:FuncBinding {
                    first=(null)
                    func=53:53:IdCon {
                      text="f"
                    }
                    rest=List {
                    }
                    statement=59:65:Statement {
                      blockStatement=(null)
                      cdataStatement=(null)
                      commentStatement=(null)
                      eachStatement=(null)
                      echoStatement=59:65:EchoStatement {
                        embedding=(null)
                        expression=64:64:Expression {
                          catExpression=64:64:CatExpression {
                            left=64:64:FieldExpression {
                              idCon=(null)
                              primitiveExpression=64:64:IdCon {
                                text="x"
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        semicolon=65:65:Semicolon {
                          text=";"
                        }
                      }
                      ifStatement=(null)
                      letStatement=(null)
                      markupStatement=(null)
                      yieldStatement=(null)
                    }
                  }
                  varBinding=(null)
                }
              }
              endTerm=78:80:EndTerm {
                text="end"
              }
              statement=List {
                73:74:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=73:74:MarkupStatement {
                    markup=73:73:Markup {
                      arguments=(null)
                      designator=73:73:Designator {
                        attribute=List {
                        }
                        idCon=73:73:IdCon {
                          text="f"
                        }
                      }
                    }
                    markupChain=74:74:MarkupChain {
                      embedding=(null)
                      expression=(null)
                      semicolon=74:74:Semicolon {
                        text=";"
                      }
                      statement=(null)
                    }
                  }
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test015"
  }
}
RAW:
Program(IdCon(test015),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(x),Expression(CatExpression(FieldExpression(Text("Hello"),null),null),null,null),Semicolon(;)),null), Assignment(null,FuncBinding(IdCon(f),null,List(),Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null),null,Semicolon(;)),null,null,null)))),List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(f),List()),null),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)),null,null,null,null,null,null)),EndTerm(end)))))