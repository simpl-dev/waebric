0:50:Program {
  definitions=16:50:Definitions {
    definition=List {
      16:50:FunctionDef {
        arguments=(null)
        endTerm=48:50:EndTerm {
          text="end"
        }
        idCon=20:23:IdCon {
          text="main"
        }
        statements=List {
          27:46:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=27:46:MarkupStatement {
              markup=27:30:Markup {
                arguments=(null)
                designator=27:30:Designator {
                  attribute=List {
                  }
                  idCon=27:30:IdCon {
                    text="html"
                  }
                }
              }
              markupChain=32:46:MarkupChain {
                embedding=(null)
                expression=32:45:Expression {
                  catExpression=32:45:CatExpression {
                    left=32:45:FieldExpression {
                      idCon=(null)
                      primitiveExpression=32:45:Text {
                        text=""Hello world!""
                      }
                    }
                    right=(null)
                  }
                  listExpression=(null)
                  recordExpression=(null)
                }
                semicolon=46:46:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test022"
  }
}
RAW:
Program(IdCon(test022),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(html),List()),null),MarkupChain(Semicolon(;),Expression(CatExpression(FieldExpression(Text("Hello world!"),null),null),null,null),null,null)))),EndTerm(end)))))