0:152:Program {
  definitions=17:152:Definitions {
    definition=List {
      17:49:FunctionDef {
        arguments=(null)
        endTerm=47:49:EndTerm {
          text="end"
        }
        idCon=21:24:IdCon {
          text="main"
        }
        statements=List {
          28:45:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=28:45:MarkupStatement {
              markup=28:44:Markup {
                arguments=29:44:Arguments {
                  first=30:43:Expression {
                    catExpression=30:43:CatExpression {
                      left=30:43:FieldExpression {
                        idCon=(null)
                        primitiveExpression=30:43:Text {
                          text=""Hello world!""
                        }
                      }
                      right=(null)
                    }
                    listExpression=(null)
                    recordExpression=(null)
                  }
                  rest=List {
                  }
                }
                designator=28:28:Designator {
                  attribute=List {
                  }
                  idCon=28:28:IdCon {
                    text="f"
                  }
                }
              }
              markupChain=45:45:MarkupChain {
                embedding=(null)
                expression=(null)
                semicolon=45:45:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
        }
      }
      52:119:FunctionDef {
        arguments=58:58:Formals {
          left=58:58:IdCon {
            text="x"
          }
          rest=List {
          }
        }
        endTerm=117:119:EndTerm {
          text="end"
        }
        idCon=56:56:IdCon {
          text="f"
        }
        statements=List {
          63:107:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=63:107:LetStatement {
              assignment=List {
                72:86:Assignment {
                  funcBinding=(null)
                  varBinding=72:86:VarBinding {
                    expression=76:85:Expression {
                      catExpression=76:85:CatExpression {
                        left=76:85:FieldExpression {
                          idCon=(null)
                          primitiveExpression=76:85:Text {
                            text=""Goodbye!""
                          }
                        }
                        right=(null)
                      }
                      listExpression=(null)
                      recordExpression=(null)
                    }
                    idCon=72:72:IdCon {
                      text="x"
                    }
                    semicolon=86:86:Semicolon {
                      text=";"
                    }
                  }
                }
              }
              endTerm=105:107:EndTerm {
                text="end"
              }
              statement=List {
                97:101:Statement {
                  blockStatement=(null)
                  cdataStatement=(null)
                  commentStatement=(null)
                  eachStatement=(null)
                  echoStatement=(null)
                  ifStatement=(null)
                  letStatement=(null)
                  markupStatement=97:101:MarkupStatement {
                    markup=97:100:Markup {
                      arguments=98:100:Arguments {
                        first=99:99:Expression {
                          catExpression=99:99:CatExpression {
                            left=99:99:FieldExpression {
                              idCon=(null)
                              primitiveExpression=99:99:IdCon {
                                text="x"
                              }
                            }
                            right=(null)
                          }
                          listExpression=(null)
                          recordExpression=(null)
                        }
                        rest=List {
                        }
                      }
                      designator=97:97:Designator {
                        attribute=List {
                        }
                        idCon=97:97:IdCon {
                          text="g"
                        }
                      }
                    }
                    markupChain=101:101:MarkupChain {
                      embedding=(null)
                      expression=(null)
                      semicolon=101:101:Semicolon {
                        text=";"
                      }
                      statement=(null)
                    }
                  }
                  yieldStatement=(null)
                }
              }
            }
            markupStatement=(null)
            yieldStatement=(null)
          }
          111:115:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=(null)
            ifStatement=(null)
            letStatement=(null)
            markupStatement=111:115:MarkupStatement {
              markup=111:114:Markup {
                arguments=112:114:Arguments {
                  first=113:113:Expression {
                    catExpression=113:113:CatExpression {
                      left=113:113:FieldExpression {
                        idCon=(null)
                        primitiveExpression=113:113:IdCon {
                          text="x"
                        }
                      }
                      right=(null)
                    }
                    listExpression=(null)
                    recordExpression=(null)
                  }
                  rest=List {
                  }
                }
                designator=111:111:Designator {
                  attribute=List {
                  }
                  idCon=111:111:IdCon {
                    text="g"
                  }
                }
              }
              markupChain=115:115:MarkupChain {
                embedding=(null)
                expression=(null)
                semicolon=115:115:Semicolon {
                  text=";"
                }
                statement=(null)
              }
            }
            yieldStatement=(null)
          }
        }
      }
      122:152:FunctionDef {
        arguments=128:128:Formals {
          left=128:128:IdCon {
            text="x"
          }
          rest=List {
          }
        }
        endTerm=150:152:EndTerm {
          text="end"
        }
        idCon=126:126:IdCon {
          text="g"
        }
        statements=List {
          133:148:Statement {
            blockStatement=(null)
            cdataStatement=(null)
            commentStatement=(null)
            eachStatement=(null)
            echoStatement=133:148:EchoStatement {
              embedding=(null)
              expression=138:147:Expression {
                catExpression=138:147:CatExpression {
                  left=138:143:FieldExpression {
                    idCon=(null)
                    primitiveExpression=138:143:Text {
                      text=""x = ""
                    }
                  }
                  right=147:147:Expression {
                    catExpression=147:147:CatExpression {
                      left=147:147:FieldExpression {
                        idCon=(null)
                        primitiveExpression=147:147:IdCon {
                          text="x"
                        }
                      }
                      right=(null)
                    }
                    listExpression=(null)
                    recordExpression=(null)
                  }
                }
                listExpression=(null)
                recordExpression=(null)
              }
              semicolon=148:148:Semicolon {
                text=";"
              }
            }
            ifStatement=(null)
            letStatement=(null)
            markupStatement=(null)
            yieldStatement=(null)
          }
        }
      }
    }
  }
  idCon=7:13:IdCon {
    text="test045"
  }
}
RAW:
Program(IdCon(test045),Definitions(List(FunctionDef(IdCon(main),null,List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(f),List()),Arguments(Expression(CatExpression(FieldExpression(Text("Hello world!"),null),null),null,null),List())),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)), FunctionDef(IdCon(f),Formals(IdCon(x),List()),List(Statement(null,null,LetStatement(List(Assignment(VarBinding(IdCon(x),Expression(CatExpression(FieldExpression(Text("Goodbye!"),null),null),null,null),Semicolon(;)),null)),List(Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(g),List()),Arguments(Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null),List())),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)),null,null,null,null,null,null), Statement(null,null,null,null,null,null,null,null,MarkupStatement(Markup(Designator(IdCon(g),List()),Arguments(Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null),List())),MarkupChain(Semicolon(;),null,null,null)))),EndTerm(end)), FunctionDef(IdCon(g),Formals(IdCon(x),List()),List(Statement(null,null,null,null,null,EchoStatement(Expression(CatExpression(FieldExpression(Text("x = "),null),Expression(CatExpression(FieldExpression(IdCon(x),null),null),null,null)),null,null),null,Semicolon(;)),null,null,null)),EndTerm(end)))))