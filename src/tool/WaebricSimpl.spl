grammar ee.cyber.simplicitas.waebric.WaebricSimpl;

Program: 'module' Id Definitions;

Definitions: Definition+;

Definition: 'def' Id '(' arguments=Args ')' 
	statements=Statement*
'end';

RecordPair: pairName=Id ":" pairValue=PrimitiveData;
DataRecordItems: recArg=RecordPair ("," recRest=DataRecordItems)?;
DataListItems: listArg=PrimitiveData ("," listRest=DataListItems)?;
DataList: "[" list=DataListItems "]";
DataRecords: "{" records=DataRecordItems "}";
Args: arg=Data ("," rst=Args)?;
DataNum: numVal=NUM;
DataStr: strVal=STR;
DataSymbol: symVal=SYMBOL;

Statement: Id;

// Data types that can be passed as arguments
// TODO: DataNum, DataStr and DataSymbol should be contextual
option PrimitiveData: DataNum | DataStr | DataSymbol;
option Data: PrimitiveData | DataList | DataRecords;

// Basic variable types
terminal NUM: ('0'..'9')*;
terminal STR: '"' (~'"')* '"';
terminal SYMBOL: "'" Id;


terminal Id: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
fragment ML_COMMENT: '/*' (~'*' | '*' ~'/')* '*/';
fragment SL_COMMENT: '//' ~('\n'|'\r')*;
hidden terminal WS: (' '|'\t'|'\r'|'\n'|SL_COMMENT|ML_COMMENT)+;
